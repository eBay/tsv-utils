# Tests:
#   DUBTEST - dub build and test
#   MAKETEST - make test, plus -static on LDC
#   CODECOV - Runs code coverage
#   APPLTO=[default|off|thin|full] - make test with the setting
#   ALLLTO=[default|thin|full] - make test LDC_RUNTIME_LTO=1 and LTO value
#   DOCKERSPECIAL - Special dockerized build to run LDC with LTO and -static
#   DEPLOY - Deploy if a tagged release.
#       #docker run --rm -ti -v $(pwd):/src dlanguage/ldc make test DCOMPILER=$DC LDC_RUNTIME_LTO=1 DFLAGS=-static;
matrix:
  include:
    - os: osx
      osx_image: xcode9
      language: d
      d: dmd
      env: DUBTEST=1 MAKETEST=1 CODECOV=1
    - os: linux
      language: d
      d: dmd
      env: DUBTEST=1 MAKETEST=1
    - os: osx
      osx_image: xcode9
      language: d
      d: ldc-1.2.0
      env: DUBTEST=1 MAKETEST=1 APPLTO=off
    - os: osx
      osx_image: xcode9
      language: d
      d: ldc-1.5.0
      env: DUBTEST=1 MAKETEST=1 APPLTO=off
    - os: osx
      osx_image: xcode9
      language: d
      d: ldc-1.5.0
      env: ALLLTO=default DEPLOY=1
    - os: linux
      language: d
      d: ldc-1.2.0
      env: DUBTEST=1 MAKETEST=1
    - os: linux
      language: d
      d: ldc-1.5.0
      env: DUBTEST=1 MAKETEST=1 APPLTO=default
    - os: linux
      language: d
      d: ldc-1.5.0
      env: ALLLTO=default
    - os: linux
      dist: trusty
      sudo: required
      language: d
      d: ldc-1.5.0
      services: docker
      env: DOCKERSPECIAL=1 DEPLOY=1
before_install:
  - if [[ "$DOCKERSPECIAL" == "1" ]]; then
      sudo apt-get -qq update;
      sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce;
      docker pull dlanguage/ldc;
      export UID=$(id -u);
      export GID=$(id -g);
    fi
script:
- if [[ "$DUBTEST" == "1" ]]; then
    dub run -- --compiler=$DC;
    make test-nobuild;
    dub clean;
    make clean;
  fi
- if [[ "$MAKETEST" == "1" ]]; then
    make test DCOMPILER=$DC;
    make clean;
    if [[ "$TRAVIS_OS_NAME" == "linux" && "$DC" == "ldc2" ]]; then
      make test DCOMPILER=$DC DFLAGS=-static;
      make clean;
    fi
  fi
- if [[ "$CODECOV" == "1" ]]; then
    make test-codecov;
  fi
- if [[ ! -z "$APPLTO" ]]; then
    make DCOMPILER=$DC LDC_LTO=$APPLTO;
    make clean;
  fi
- if [[ ! -z "$ALLLTO" ]]; then
    if [[ "$ALLLTO" == "default" ]]; then
      make DCOMPILER=$DC LDC_RUNTIME_LTO=1;
    else
      make DCOMPILER=$DC LDC_RUNTIME_LTO=1 LDC_LTO=$ALLLTO;
    fi
    make clean;
  fi
- if [[ "$DOCKERSPECIAL" == "1" ]]; then
    docker run --rm -ti -v $(pwd):/src dlanguage/ldc make test DCOMPILER=$DC;
    sudo chown -R $UID:$GID $(pwd);
    make test-nobuild;
    make clean;
  fi
after_success:
- if [[ "$CODECOV" == "1" ]]; then
    bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports";
  fi
before_deploy:
- if [[ -z "$TRAVIS_TAG" || "$TRAVIS_TAG" == "" ]]; then
    export USE_VERSION="v~dev";
  else export
    USE_VERSION="$TRAVIS_TAG";
  fi
- if [[ "$DOCKERSPECIAL" == "1" ]]; then
    docker run --rm -ti -v $(pwd):/src dlanguage/ldc make package DCOMPILER=$DC OS=$TRAVIS_OS_NAME APP_VERSION=$USE_VERSION LDC_RUNTIME_LTO=1 DFLAGS=-static;
    sudo chown -R $UID:$GID $(pwd);
  else
    make package DCOMPILER=$DC OS=$TRAVIS_OS_NAME APP_VERSION=$USE_VERSION LDC_RUNTIME_LTO=1;
  fi
deploy:
  provider: releases
  api_key:
    secure: RQ4efkF5nDo27E9u+fYSOUAtL/6/wSCt7oX1CbJAvpwrPt5ZADmRKNyeiC6zNABoJjWEMvpueIshKIHN21VTGMu/L2b7wkm8tziCMnOytKfqWHENiCoaYmtoh9AI2lob5heaO7MQ3+zJGlo8jI2CW6h+BjETIjxthtw05CMYzXt0mCFEnYt3wog9zDsXwTFw9SEM6mmoBozEwIqSHZsFRD/d6/MUifa8LpZFe0ImJjsHeLAWCa2c26XhzmeZUTWDe5BUgoy4Kg+aRm/oGFHure2/SUV4oQzwIhtLF+dgOrk0px8RErvQaAzVE4J+moWc7cIQEjlQT7TxNIcwX5Z8xchEp0PNn4Z245sJyB0aNahZq0sfHQ2xkKa2xBLBZVI1dfHtJbUNc3ulcmmcFr/IXb9rmvYfkc//tvVnzLQlZSZP198S/56m4HramdS8VO5odszoJ2ns56bPVdGypzVVKKrrqFgWYHLkRBmD3Q7l9yamHtrZ0HB0gOClTxRS+ygHk9+y5mEQj2SgwCqjctyKV2RxmVWWI14YoLvgnmXD01hNwpp3aB/PI9GFeZpZuHnqdF7clc/ESGt5e2YJPPsEX5IT4sI4AMeoEfOGOXTdcxH2GB9tmJCwolmdBc6ql0KAZ+Uu3Iu/edbNyvoGTCymsk21eTdyVDNbR0nB17qhgbo=
  file_glob: true
  file: ./*.tar.gz
  skip_cleanup: true
  on:
    tags: true
    repo: eBay/tsv-utils-dlang
    condition: "$DEPLOY = 1"
